[run]
# 指定需要测量覆盖率的源代码目录
source = .
# 排除不需要测量覆盖率的目录或文件
exclude_lines =
    # 排除空行
    \s*pass\s*
    # 排除注释
    \s*#\s*
    # 排除if __name__ == '__main__':
    if\s+__name__\s*==\s*['"]__main__['"]:
    # 排除import语句
    ^\s*import\s+
    # 排除from ... import语句
    ^\s*from\s+\w+\s+import\s+
    # 排除类和函数定义行（只排除定义行，不排除实现）
    ^\s*def\s+\w+\s*\([^)]*\)\s*:\s*$\n    ^\s*class\s+\w+\s*\([^)]*\)\s*:\s*$\n
# 忽略特定的目录
omit =
    # 忽略测试目录
    tests/
    # 忽略venv目录
    venv/
    # 忽略__pycache__目录
    **/__pycache__/
    # 忽略第三方库
    **/site-packages/

[report]
# 是否显示覆盖百分比低于指定阈值的文件
show_missing = True
# 覆盖率报告的格式（text, html, xml等）
format = text
# 覆盖率报告的输出文件
# output_file = coverage_report.txt
# 按文件名排序
sort = File
# 每行代码的覆盖率统计
line_rate = True
# 每个函数的覆盖率统计
function_rate = True
# 最小覆盖率要求（低于此值将导致测试失败）
# fail_under = 80

# 自定义覆盖率报告的HTML输出
[html]
# HTML报告的输出目录
directory = htmlcov
# 是否在HTML报告中显示行号
show_contexts = True
# 自定义HTML报告的标题
# title = Coverage Report

# 自定义覆盖率报告的XML输出
[xml]
# XML报告的输出文件
# output = coverage.xml

# 自定义覆盖率报告的JSON输出
[json]
# JSON报告的输出文件
# output = coverage.json